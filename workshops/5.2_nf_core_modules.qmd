---
title: "**Nextflow Development - nf-core Modules**"
output:
  html_document:
    toc: false
    toc_float: false
from: markdown+emoji
---

::: callout-tip

### Objectives{.unlisted}
- Gain an understanding of how nf-core modules/subworkflows can be installed
- Install a specific version of an nf-core module/subworkflows
- Understand how `modules.json` is used in the nf-core pipeline
- Gain an understanding of how to remove nf-core modules/subworkflows
:::

## **5.1 `nf-core modules`**

Previously, we used the `nf-core pipelines` command to create our initial pipeline template. We can now add modules to this template using `nf-core modules`. This command also contains subcommands, which can be used to manage modules. 

```default

                                          ,--./,-.
          ___     __   __   __   ___     /,-._.--~\ 
    |\ | |__  __ /  ` /  \ |__) |__         }  {
    | \| |       \__, \__/ |  \ |___     \`-._,-`-,
                                          `._,._,'

    nf-core/tools version 3.2.0 - https://nf-co.re

           
                                                                                             
 Usage: nf-core modules [OPTIONS] COMMAND [ARGS]...                                          
                                                                                             
 Commands to manage Nextflow DSL2 modules (tool wrappers).                                   
                                                                                             
╭─ For pipelines ───────────────────────────────────────────────────────────────────────────╮
│ list         List modules in a local pipeline or remote repository.                       │
│ info         Show developer usage information about a given module.                       │
│ install      Install DSL2 modules within a pipeline.                                      │
│ update       Update DSL2 modules within a pipeline.                                       │
│ remove       Remove a module from a pipeline.                                             │
│ patch        Create a patch file for minor changes in a module                            │
╰───────────────────────────────────────────────────────────────────────────────────────────╯
╭─ Developing new modules ──────────────────────────────────────────────────────────────────╮
│ create         Create a new DSL2 module from the nf-core template.                        │
│ lint           Lint one or more modules in a directory.                                   │
│ test           Run nf-test for a module.                                                  │
│ bump-versions  Bump versions for one or more modules in a clone of the nf-core/modules    │
│                repo.                                                                      │
╰───────────────────────────────────────────────────────────────────────────────────────────╯
╭─ Options ─────────────────────────────────────────────────────────────────────────────────╮
│ --git-remote  -g  TEXT  Remote git repo to fetch files from                               │
│ --branch      -b  TEXT  Branch of git repository hosting modules.                         │
│ --no-pull     -N        Do not pull in latest changes to local clone of modules           │
│                         repository.                                                       │
│ --help        -h        Show this message and exit.                                       │
╰───────────────────────────────────────────────────────────────────────────────────────────╯
```

To check what modules have been added into our pipeline run `nf-core modules list local` within the pipeline folder. 

```default
cd ./nf-core-customrnaseq

nf-core modules list local
```

This command will output each module that is part of the pipeline, the source repository, version, message at last commit, and the date it was last modified. 

```default

                                          ,--./,-.
          ___     __   __   __   ___     /,-._.--~\ 
    |\ | |__  __ /  ` /  \ |__) |__         }  {
    | \| |       \__, \__/ |  \ |___     \`-._,-`-,
                                          `._,._,'

    nf-core/tools version 3.2.0 - https://nf-co.re


INFO     Repository type: pipeline                                                           
INFO     Modules installed in '.':                                                           
                                                                                             
┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓
┃ Module Name ┃ Repository      ┃ Version SHA ┃ Message                        ┃ Date       ┃
┡━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩
│ fastqc      │ nf-core/modules │ 0810805     │ use detailed profiles in       │ 2024-12-13 │
│             │                 │             │ tests/nf-test.config (#7207)   │            │
│ multiqc     │ nf-core/modules │ f0719ae     │ bump multiqc 1.26 to 1.27      │ 2025-01-27 │
│             │                 │             │ (#7364)                        │            │
└─────────────┴─────────────────┴─────────────┴────────────────────────────────┴────────────┘
```

To obtain a list of all available [nf-core modules](https://nf-co.re/modules) available, `nf-core modules list remote` can be used. 

### **5.1.1 Installing modules `nf-core modules install`**

Previously, we created a simple workflow that indexed the transcriptome file (`INDEX`), performed quantification (`QUANTIFICATION`) and FastQC (`FASTQC`) on the sample FASTQ files. Finally, perfomed MultiQC on both the outputs of `QUANTIFICATION` and `FASTQC`. 

```default
N E X T F L O W  ~  version 23.04.1
Launching `rnaseq.nf` [sad_jennings] DSL2 - revision: cfae7ccc0e
executor >  local (7)
[b5/6bece3] process > INDEX              [100%] 1 of 1 ✔
[32/46f20b] process > QUANTIFICATION (3) [100%] 3 of 3 ✔
[44/27aa8d] process > FASTQC (2)         [100%] 3 of 3 ✔
```

We will be recreating these steps, using the nf-core template as a guide. 

Recall that when we created each process, we manually defined the input(s) and their structure, the output(s) and their structure, the process script, and any containers required to execute the process. This can become time consuming, especially when creating pipelines with many processes. 

Before creating a module ourselves, we should always first check the [nf-core modules page](https://nf-co.re/modules/) to see if the module we are interested in exists. 

For our `INDEX` and `QUANTIFICATION` processes, let's check if there are already modules that use `salmon index` and `salmon quant`.

```default
process INDEX {
    container "https://depot.galaxyproject.org/singularity/salmon:1.10.3--h6dccd9a_2"

    input:
    path transcriptome

    output:
    path "salmon_idx"

    script:
    """
    salmon index --threads $task.cpus -t $transcriptome -i salmon_idx
    """
}
```

```default
process QUANTIFICATION {
    container "https://depot.galaxyproject.org/singularity/salmon:1.10.3--h6dccd9a_2"

    input:
    path salmon_index
    tuple val(sample_id), path(reads)

    output:
    path "$sample_id"

    script:
    """
    salmon quant --libType=U \
    -i $salmon_index -1 ${reads[0]} -2 ${reads[1]} -o $sample_id
    """
}
```

Similar to nf-core pipelines, nf-core modules also have documentation that specifies the inputs to the process, the outputs to the process, and how to install the module to our pipeline. 

To install a module, navigate **inside** your nf-core pipeline folder. Then, the module can be installed. First, install the `SALMON_INDEX` module. 

```default
cd ./nf-core-customrnaseq

nf-core modules install salmon/index
```
If the module has been installed successfully, you will get the following message, which also includes how the module can be included in the analysis script `workflows/customrnaseq.nf`

```default

                                          ,--./,-.
          ___     __   __   __   ___     /,-._.--~\ 
    |\ | |__  __ /  ` /  \ |__) |__         }  {
    | \| |       \__, \__/ |  \ |___     \`-._,-`-,
                                          `._,._,'

    nf-core/tools version 3.2.0 - https://nf-co.re


INFO     Installing 'salmon/index'                                                           
INFO     Use the following statement to include this module:                                 
                                                                                             
 include { SALMON_INDEX } from '../modules/nf-core/salmon/index/main'                        
                                                                  
```

By default, the example `include` command provided by running `nf-core modules install` will provide the **relative output path** from the **analysis workflow file**. Therefore, this can be copied directly into `workflows/customrnaseq.nf`. Recall that if you are importing the module from within a subworkflow file in the `subworkflows` folder, you will need to change the relative file path to match the new structure. 


::: {.callout-warning}
If you are installing the module **outside** of the nf-core pipeline folder, you may see the below message:

```default
                                          ,--./,-.
          ___     __   __   __   ___     /,-._.--~\ 
    |\ | |__  __ /  ` /  \ |__) |__         }  {
    | \| |       \__, \__/ |  \ |___     \`-._,-`-,
                                          `._,._,'

    nf-core/tools version 3.2.0 - https://nf-co.re


WARNING  'repository_type' not defined in .nf-core.yml                                       
? Is this repository a pipeline or a modules repository? (Use arrow keys)
 » Pipeline
   Modules repository
```

Cancel your `nf-core modules install` command, navigate inside your pipeline folder, then retry. 

:::

Note that this module has been installed inside the `modules` folder in the pipeline, inside the `nf-core` subfolder. 

```default
modules
└── nf-core
    ├── fastqc
    |   ├── ...
    ├── multiqc
    |   ├── ...
    └── salmon
        └── index
            ├── environment.yml
            ├── main.nf
            ├── meta.yml
            └── tests
                ├── main.nf.test
                └── main.nf.test.snap

```

**Exercise**: Using the [nf-core modules page](https://nf-co.re/modules/), find a module that performs `salmon quant`. Install it to your pipeline, and check what location it has been added. Then, `include` the module in your analysis workflow script `workflows/customrnaseq.nf`. 

::: {.callout-note appearance="simple" collapse="true"}
### Solution

The nf-core `SALMON_QUANT` [module](https://nf-co.re/modules/salmon_quant/) can perform `salmon quant`. 

To install this module, the following command can be ran **inside** my pipeline folder `nf-core-customrnaseq`:

```default
nf-core modules install salmon/quant
```
```default

                                          ,--./,-.
          ___     __   __   __   ___     /,-._.--~\ 
    |\ | |__  __ /  ` /  \ |__) |__         }  {
    | \| |       \__, \__/ |  \ |___     \`-._,-`-,
                                          `._,._,'

    nf-core/tools version 3.2.0 - https://nf-co.re


INFO     Installing 'salmon/quant'                                                           
INFO     Use the following statement to include this module:                                 
                                                                                             
 include { SALMON_QUANT } from '../modules/nf-core/salmon/quant/main'                        
                                                                       
```

This module has been successfully installed in the `modules` folder, inside `nf-core`. 

```default
modules
└── nf-core
    ├── ...
    └── salmon
        ├── index
        │   ├── ...
        └── quant
            ├── environment.yml
            ├── main.nf
            ├── meta.yml
            └── tests
                ├── main.nf.test
                ├── main.nf.test.snap
                └── nextflow.config

```

Since the example `include` command provided by running `nf-core modules install` will provide the relative output path from the analysis workflow file, the following can be copied directly into `workflows/customrnaseq.nf`. 

```default
include { SALMON_QUANT } from '../modules/nf-core/salmon/quant/main'  
```
::: 

We can now list all the modules installed in our pipeline:

```default
nf-core modules list local
```
  
```default

                                          ,--./,-.
          ___     __   __   __   ___     /,-._.--~\ 
    |\ | |__  __ /  ` /  \ |__) |__         }  {
    | \| |       \__, \__/ |  \ |___     \`-._,-`-,
                                          `._,._,'

    nf-core/tools version 3.2.0 - https://nf-co.re


INFO     Repository type: pipeline                                                                                                                                                                                       
INFO     Modules installed in '.':                                                                                                                                                                                       
                                                                                                                                                                                                                         
┏━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓
┃ Module Name  ┃ Repository      ┃ Version SHA ┃ Message                                                                     ┃ Date       ┃
┡━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩
│ fastqc       │ nf-core/modules │ 0810805     │ use detailed profiles in tests/nf-test.config (#7207)                       │ 2024-12-13 │
│ multiqc      │ nf-core/modules │ f0719ae     │ bump multiqc 1.26 to 1.27 (#7364)                                           │ 2025-01-27 │
│ salmon/index │ nf-core/modules │ 05954da     │ Delete all tag.yml + relative path in antismash/antismashlite tests (#8116) │ 2025-03-26 │
│ salmon/quant │ nf-core/modules │ 05954da     │ Delete all tag.yml + relative path in antismash/antismashlite tests (#8116) │ 2025-03-26 │
└──────────────┴─────────────────┴─────────────┴─────────────────────────────────────────────────────────────────────────────┴────────────┘
```

#### Module list: **`modules.json`**
The `modules.json` contains detailed information of all the modules installed in the pipeline, where it was installed from, and the version of the module. 

::: {.callout-note appearance="simple" collapse="true"}
### modules.json

```default
{
    "name": "nf-core/customrnaseq",
    "homePage": "https://github.com/nf-core/customrnaseq",
    "repos": {
        "https://github.com/nf-core/modules.git": {
            "modules": {
                "nf-core": {
                    ...

                    "salmon/index": {
                        "branch": "master",
                        "git_sha": "05954dab2ff481bcb999f24455da29a5828af08d",
                        "installed_by": ["modules"]
                    },
                    "salmon/quant": {
                        "branch": "master",
                        "git_sha": "05954dab2ff481bcb999f24455da29a5828af08d",
                        "installed_by": ["modules"]
                    }
                }
            },
            "subworkflows": {
                "nf-core": {
                    "utils_nextflow_pipeline": {
                        "branch": "master",
                        "git_sha": "c2b22d85f30a706a3073387f30380704fcae013b",
                        "installed_by": ["subworkflows"]
                    },

                    ...

                    }
    ...
}
```
:::

What if we remove the module folder for `salmon/quant`?

```default
rm -r modules/nf-core/salmon/quant

ls modules/nf-core/salmon/quant
```

```default
ls: cannot access 'modules/nf-core/salmon/quant': No such file or directory
```

Let's now rerun the following command:

```default
nf-core modules list local
```

```default

                                          ,--./,-.
          ___     __   __   __   ___     /,-._.--~\ 
    |\ | |__  __ /  ` /  \ |__) |__         }  {
    | \| |       \__, \__/ |  \ |___     \`-._,-`-,
                                          `._,._,'

    nf-core/tools version 3.2.0 - https://nf-co.re


INFO     Repository type: pipeline                                                           
INFO     Reinstalling modules found in 'modules.json' but missing from directory:            
         'modules/nf-core/salmon/quant'                                                      
INFO     Modules installed in '.':                                                           
                                                                                             
┏━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓
┃ Module Name  ┃ Repository      ┃ Version SHA ┃ Message                       ┃ Date       ┃
┡━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩
│ fastqc       │ nf-core/modules │ 0810805     │ use detailed profiles in      │ 2024-12-13 │
│              │                 │             │ tests/nf-test.config (#7207)  │            │
│ multiqc      │ nf-core/modules │ f0719ae     │ bump multiqc 1.26 to 1.27     │ 2025-01-27 │
│              │                 │             │ (#7364)                       │            │
│ salmon/index │ nf-core/modules │ 05954da     │ Delete all tag.yml + relative │ 2025-03-26 │
│              │                 │             │ path in                       │            │
│              │                 │             │ antismash/antismashlite tests │            │
│              │                 │             │ (#8116)                       │            │
│ salmon/quant │ nf-core/modules │ 05954da     │ Delete all tag.yml + relative │ 2025-03-26 │
│              │                 │             │ path in                       │            │
│              │                 │             │ antismash/antismashlite tests │            │
│              │                 │             │ (#8116)                       │            │
└──────────────┴─────────────────┴─────────────┴───────────────────────────────┴────────────┘
```

In the command output, we see that our deleted module is automatically reinstalled, based on the list in `modules.json`

```default
ls modules/nf-core/salmon/quant
```
```default
environment.yml  main.nf  meta.yml  tests
```

#### Installing specific module versions

Inside the `modules.json` file, the `git_sha` is listed, which corresponds to a specific version of the module. To obtain the SHA for a module, navigate to the [module Github page](https://github.com/nf-core/modules/tree/master/modules/nf-core/salmon/quant), and click `History`.

![](./media/5.1_module_sha_1.png)

The full SHA path can then be copied. 

![](./media/5.1_module_sha_2.png)


If there is a specific module version we would like to install, this can be done using `nf-core modules`. Run the following command:

```default
nf-core modules install -h
```
```default

                                          ,--./,-.
          ___     __   __   __   ___     /,-._.--~\ 
    |\ | |__  __ /  ` /  \ |__) |__         }  {
    | \| |       \__, \__/ |  \ |___     \`-._,-`-,
                                          `._,._,'

    nf-core/tools version 3.2.0 - https://nf-co.re


                                                                                             
 Usage: nf-core modules install [OPTIONS] <tool> or <tool/subtool>                           
                                                                                             
 Install DSL2 modules within a pipeline.                                                     
                                                                                             
╭─ Options ─────────────────────────────────────────────────────────────────────────────────╮
│ --dir     -d  PATH          Pipeline directory. [default: current working directory]      │
│ --prompt  -p                Prompt for the version of the module                          │
│ --force   -f                Force reinstallation of module if it already exists           │
│ --sha     -s  <commit sha>  Install module at commit SHA                                  │
│ --help    -h                Show this message and exit.                                   │
╰───────────────────────────────────────────────────────────────────────────────────────────╯
```

The SHA version can be specified using the `--sha` parameter. Since we have already installed the module, the `--force` parameter will also be required. 

**Exercise**: Install the `salmon/quant` module, for SHA version `85b5f8a0d9df9ce7587af50e2ee75b37c97515c6`. Use either `nf-core modules list local` or the `modules.json` file to verify the correct version was installed. 

::: {.callout-note collapse="true"}
### **Solution**

The following command can be used to install `salmon/quant`, SHA version `85b5f8a0d9df9ce7587af50e2ee75b37c97515c6`. 

```default
nf-core modules install --sha 85b5f8a0d9df9ce7587af50e2ee75b37c97515c6 --force salmon/quant
```

Inside the `modules.json`, the `git_sha` has been updated to the correct version.

```default
"salmon/quant": {
    "branch": "master",
    "git_sha": "85b5f8a0d9df9ce7587af50e2ee75b37c97515c6",
    "installed_by": ["modules"]
}
```

Using `nf-core modules list local`, the `Version SHA` has also been updated

```default

                                          ,--./,-.
          ___     __   __   __   ___     /,-._.--~\ 
    |\ | |__  __ /  ` /  \ |__) |__         }  {
    | \| |       \__, \__/ |  \ |___     \`-._,-`-,
                                          `._,._,'

    nf-core/tools version 3.2.0 - https://nf-co.re


INFO     Repository type: pipeline                                                           
INFO     Modules installed in '.':                                                           
                                                                                             
┏━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓
┃ Module Name  ┃ Repository      ┃ Version SHA ┃ Message                       ┃ Date       ┃
┡━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩
│ fastqc       │ nf-core/modules │ 0810805     │ use detailed profiles in      │ 2024-12-13 │
│              │                 │             │ tests/nf-test.config (#7207)  │            │
│ multiqc      │ nf-core/modules │ f0719ae     │ bump multiqc 1.26 to 1.27     │ 2025-01-27 │
│              │                 │             │ (#7364)                       │            │
│ salmon/index │ nf-core/modules │ 05954da     │ Delete all tag.yml + relative │ 2025-03-26 │
│              │                 │             │ path in                       │            │
│              │                 │             │ antismash/antismashlite tests │            │
│              │                 │             │ (#8116)                       │            │
│ salmon/quant │ nf-core/modules │ 85b5f8a     │ Fix language server error in  │ 2025-03-18 │
│              │                 │             │ salmon/quant (#7843)          │            │
└──────────────┴─────────────────┴─────────────┴───────────────────────────────┴────────────┘
```
:::

### **5.1.2 Removing modules `nf-core modules remove`**

Previously, we saw that by simply removing the module folder didn't delete the module from the pipeline. The pipeline automatically searches for missing module files and redownloads them, based on the SHA version specified in `modules.json`. 

To remove a module from a pipeline, the following can be used:

```default
nf-core modules remove
```

**Exercise**: 

1. Use the [nf-core modules page](https://nf-co.re/modules/) to find and install **any** module of **any** version to your pipeline

2. Verify the module has been installed by checking the `modules.json` file, or by listing the modules in the pipeline

3. Remove the newly installed module, and ensure it is no longer part of the pipeline

::: {.callout-note collapse="true"}
### Solution

1. The module chosen is [`samtools/sort`](https://nf-co.re/modules/samtools_sort/). To install this module, the following command can be used (**inside** the pipeline folder):

    ```default
    nf-core modules install samtools/sort
    ```

2. Listing the modules in the pipeline:

    ```default
    nf-core modules list local
    ```

    ```default
                                          ,--./,-.
          ___     __   __   __   ___     /,-._.--~\ 
    |\ | |__  __ /  ` /  \ |__) |__         }  {
    | \| |       \__, \__/ |  \ |___     \`-._,-`-,
                                          `._,._,'

    nf-core/tools version 3.2.0 - https://nf-co.re


    INFO     Repository type: pipeline                                                                                                 
    INFO     Modules installed in '.':                                                                                                 
                                                                                                                                    
    ┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓
    ┃ Module Name   ┃ Repository      ┃ Version SHA ┃ Message                                                            ┃ Date       ┃
    ┡━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩
    │ fastqc        │ nf-core/modules │ 0810805     │ use detailed profiles in tests/nf-test.config (#7207)              │ 2024-12-13 │
    │ multiqc       │ nf-core/modules │ f0719ae     │ bump multiqc 1.26 to 1.27 (#7364)                                  │ 2025-01-27 │
    │ salmon/index  │ nf-core/modules │ 05954da     │ Delete all tag.yml + relative path in antismash/antismashlite      │ 2025-03-26 │
    │               │                 │             │ tests (#8116)                                                      │            │
    │ salmon/quant  │ nf-core/modules │ 05954da     │ Delete all tag.yml + relative path in antismash/antismashlite      │ 2025-03-26 │
    │               │                 │             │ tests (#8116)                                                      │            │
    │ samtools/sort │ nf-core/modules │ 05954da     │ Delete all tag.yml + relative path in antismash/antismashlite      │ 2025-03-26 │
    │               │                 │             │ tests (#8116)                                                      │            │
    └───────────────┴─────────────────┴─────────────┴────────────────────────────────────────────────────────────────────┴────────────┘
    ```

    The module is also present in `modules.json`:

    ```default
    {
        "name": "nf-core/customrnaseq",
        "homePage": "https://github.com/nf-core/customrnaseq",
        "repos": {
            "https://github.com/nf-core/modules.git": {
                "modules": {
                    "nf-core": {
                        ...
                        "samtools/sort": {
                            "branch": "master",
                            "git_sha": "05954dab2ff481bcb999f24455da29a5828af08d",
                            "installed_by": ["modules"]
                        }
                    }
                },
        ...
    }
    ```

3. To remove `ssamtools/sort`, the following command is used:

    ```default
    nf-core modules remove samtools/sort
    ```

    ```default
                                              ,--./,-.
          ___     __   __   __   ___     /,-._.--~\ 
    |\ | |__  __ /  ` /  \ |__) |__         }  {
    | \| |       \__, \__/ |  \ |___     \`-._,-`-,
                                          `._,._,'

    nf-core/tools version 3.2.0 - https://nf-co.re


    INFO     Removed files for 'samtools/sort' and its dependencies 'samtools/sort'.    
    ```

    Checking the module has been correctly removed:

     ```default
    nf-core modules list local
    ```

    The module `samtools/sort` has been removed from the modules list. 

    ```default

                                          ,--./,-.
          ___     __   __   __   ___     /,-._.--~\ 
    |\ | |__  __ /  ` /  \ |__) |__         }  {
    | \| |       \__, \__/ |  \ |___     \`-._,-`-,
                                          `._,._,'

    nf-core/tools version 3.2.0 - https://nf-co.re


    INFO     Repository type: pipeline                                                                                                                  
    INFO     Modules installed in '.':                                                                                                                  
                                                                                                                                                        
    ┏━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓
    ┃ Module Name  ┃ Repository      ┃ Version SHA ┃ Message                                                                     ┃ Date       ┃
    ┡━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩
    │ fastqc       │ nf-core/modules │ 0810805     │ use detailed profiles in tests/nf-test.config (#7207)                       │ 2024-12-13 │
    │ multiqc      │ nf-core/modules │ f0719ae     │ bump multiqc 1.26 to 1.27 (#7364)                                           │ 2025-01-27 │
    │ salmon/index │ nf-core/modules │ 05954da     │ Delete all tag.yml + relative path in antismash/antismashlite tests (#8116) │ 2025-03-26 │
    │ salmon/quant │ nf-core/modules │ 05954da     │ Delete all tag.yml + relative path in antismash/antismashlite tests (#8116) │ 2025-03-26 │
    └──────────────┴─────────────────┴─────────────┴─────────────────────────────────────────────────────────────────────────────┴────────────┘
```




:::

## **5.2 `nf-core subworkflows`**

Like modules, subworkflows can be added to a workflow using the `nf-core` tools suite. 

```default
nf-core subworkflows
```

The `subworkflows` command contains similar sub-commands to `modules`

```default
                                          ,--./,-.
          ___     __   __   __   ___     /,-._.--~\ 
    |\ | |__  __ /  ` /  \ |__) |__         }  {
    | \| |       \__, \__/ |  \ |___     \`-._,-`-,
                                          `._,._,'

    nf-core/tools version 3.2.0 - https://nf-co.re


                                                                                              
 Usage: nf-core subworkflows [OPTIONS] COMMAND [ARGS]...                                      
                                                                                              
 Commands to manage Nextflow DSL2 subworkflows (tool wrappers).                               
                                                                                              
╭─ For pipelines ────────────────────────────────────────────────────────────────────────────╮
│ list        List subworkflows in a local pipeline or remote repository.                    │
│ info        Show developer usage information about a given subworkflow.                    │
│ install     Install DSL2 subworkflow within a pipeline.                                    │
│ update      Update DSL2 subworkflow within a pipeline.                                     │
│ remove      Remove a subworkflow from a pipeline.                                          │
╰────────────────────────────────────────────────────────────────────────────────────────────╯
╭─ Developing new subworkflows ──────────────────────────────────────────────────────────────╮
│ create      Create a new subworkflow from the nf-core template.                            │
│ lint        Lint one or more subworkflows in a directory.                                  │
│ test        Run nf-test for a subworkflow.                                                 │
╰────────────────────────────────────────────────────────────────────────────────────────────╯
╭─ Commands ─────────────────────────────────────────────────────────────────────────────────╮
│ patch     Create a patch file for minor changes in a subworkflow                           │
╰────────────────────────────────────────────────────────────────────────────────────────────╯
╭─ Options ──────────────────────────────────────────────────────────────────────────────────╮
│ --git-remote  -g  TEXT  Remote git repo to fetch files from                                │
│ --branch      -b  TEXT  Branch of git repository hosting modules.                          │
│ --no-pull     -N        Do not pull in latest changes to local clone of modules            │
│                         repository.                                                        │
│ --help        -h        Show this message and exit.                                        │
╰────────────────────────────────────────────────────────────────────────────────────────────╯
```

- `list`: list the installed subworkflows in the pipeline
- `install`: install a subworkflow to the pipeline
- `update`: update the pipeline version using the GitHub SHA
- `remove`: remove a subworkflow from the pipeline

**Exercise**: Search the [nf-core subworkflows page](https://nf-co.re/subworkflows) for the `fastq_subsample_fq_salmon` subworkflow. Install it into the workflow, and list all the subworkflows that are installed in the pipeline. 

::: {.callout-note collapse="true"}
## Solution

The `fastq_subsample_fq_salmon` subworkflow is located in the nf-core subworkflows page [here](https://nf-co.re/subworkflows/fastq_subsample_fq_salmon/). To install the module, the following command can be used:

```default
nf-core subworkflows install fastq_subsample_fq_salmon
```
```default

                                          ,--./,-.
          ___     __   __   __   ___     /,-._.--~\ 
    |\ | |__  __ /  ` /  \ |__) |__         }  {
    | \| |       \__, \__/ |  \ |___     \`-._,-`-,
                                          `._,._,'

    nf-core/tools version 3.2.0 - https://nf-co.re


INFO     Installing 'fastq_subsample_fq_salmon'                                                                                                     
INFO     Use the following statement to include this subworkflow:                                                                                   
                                                                                                                                                    
 include { FASTQ_SUBSAMPLE_FQ_SALMON } from '../subworkflows/nf-core/fastq_subsample_fq_salmon/main'  
```

To list the subworkflows in the pipeline:

```default
nf-core subworkflows list local 
```

This output contains the newly installed subworkflow `fastq_subsample_fq_salmon`:

```default
                                          ,--./,-.
          ___     __   __   __   ___     /,-._.--~\ 
    |\ | |__  __ /  ` /  \ |__) |__         }  {
    | \| |       \__, \__/ |  \ |___     \`-._,-`-,
                                          `._,._,'

    nf-core/tools version 3.2.0 - https://nf-co.re


INFO     Repository type: pipeline                                                                                                                  
INFO     Subworkflows installed in '.':                                                                                                             
                                                                                                                                                    
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓
┃ Subworkflow Name          ┃ Repository      ┃ Version SHA ┃ Message                                                                 ┃ Date       ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩
│ fastq_subsample_fq_salmon │ nf-core/modules │ 05954da     │ Delete all tag.yml + relative path in antismash/antismashlite tests     │ 2025-03-26 │
│                           │                 │             │ (#8116)                                                                 │            │
│ utils_nextflow_pipeline   │ nf-core/modules │ c2b22d8     │ Utils Nextflow: Avoid unused variables (#7070)                          │ 2024-11-24 │
│ utils_nfcore_pipeline     │ nf-core/modules │ 51ae540     │ Replace switch with else-if in utils_nfcore_pipeline (#7168)            │ 2024-12-06 │
│ utils_nfschema_plugin     │ nf-core/modules │ 2fd2cd6     │ fails with lenient mode (#6865)                                         │ 2024-10-28 │
└───────────────────────────┴─────────────────┴─────────────┴─────────────────────────────────────────────────────────────────────────┴────────────┘
```

:::


---
^*This workshop is adapted from [Fundamentals Training](https://training.nextflow.io/basic_training/), [Advanced Training](https://training.nextflow.io/advanced/), [Developer Tutorials](https://nf-co.re/docs/contributing/tutorials/creating_with_nf_core#creating-a-pipeline), [Nextflow Patterns](https://nextflow-io.github.io/patterns/) materials from Nextflow, nf-core [nf-core tools documentation](https://nf-co.re/docs/nf-core-tools) and [nf-validation](https://nextflow-io.github.io/nf-validation/)*^ -->
